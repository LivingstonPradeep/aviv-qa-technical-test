name: Playwright Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch: 
    inputs:
      test_command:
        description: "Specify Playwright test command (default: all tests)"
        required: false
        default: "npx playwright test"
        type: string

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Setup Demo Application
        run: |
          npm install
          npm run dev &  # Start the app in the background
    
      - name: Verify Application is Running
        run: curl --fail http://localhost:5173 || (cat demo-app/app.log && exit 1)

      - name: Install Playwright Dependencies
        run: |
          echo "Current directory: $(pwd)"  # Print the current working directory
          ls -lah  # List all files to confirm we're in the right repo
          npx playwright install chromium
          npm install -g allure-commandline --save-dev
      
      - name: Set Playwright Test Command
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "Using manual input command: ${{ inputs.test_command }}"
            echo "PLAYWRIGHT_TEST_COMMAND=${{ inputs.test_command }}" >> $GITHUB_ENV
          else
            echo "Running all tests as this is a push or PR"
            echo "PLAYWRIGHT_TEST_COMMAND=npx playwright test" >> $GITHUB_ENV
          fi

      - name: Run Playwright Tests
        run: ${{ env.PLAYWRIGHT_TEST_COMMAND }}
        env:
          PLAYWRIGHT_BASE_URL: http://localhost:5173
        continue-on-error: true

      - name: Check Allure Results
        if: always() 
        run: ls -R reports/allure-results

      - name: Generate Allure Report
        if: always()
        run: allure generate reports/allure-results --clean -o allure-report
      
      - name: Check Allure Report
        if: always()
        run: ls -R allure-report

      - name: Deploy Allure Report to GitHub Pages
        if: success() || failure()
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: allure-report
          clean: true
          token: ${{ secrets.GITHUB_TOKEN }}
          target-folder: allure-history/${{ env.REPORT_TIMESTAMP }}

      - name: Upload Allure Report as Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report/
          retention-days: 7
